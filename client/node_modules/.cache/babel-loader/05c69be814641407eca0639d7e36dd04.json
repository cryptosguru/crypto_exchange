{"ast":null,"code":"import axios from \"axios\";\nimport { MIN_API_URL, TOP_LIST_24H, TOP_EXCHANGES, GENERAL_WALLETS, CRYPTOCOMPARE_WEBSITE } from '../constants';\nimport { getSymbol } from '../../shared/utils/Symbol';\n/**\n * @returns {Array<{id: string, name: string, displayName: string, imageUrl: string, price: number, lastUpdate: Date }>}\n */\n\nexport var getTopListBy24Hours = function getTopListBy24Hours(_ref) {\n  var _ref$limit = _ref.limit,\n      limit = _ref$limit === void 0 ? 10 : _ref$limit,\n      _ref$symbol = _ref.symbol,\n      symbol = _ref$symbol === void 0 ? 'USD' : _ref$symbol,\n      _ref$page = _ref.page,\n      page = _ref$page === void 0 ? 0 : _ref$page;\n  return axios.get(\"\".concat(MIN_API_URL, \"/\").concat(TOP_LIST_24H, \"?limit=\").concat(limit, \"&tsym=\").concat(symbol, \"&page=\").concat(page)).then(function (_ref2) {\n    var info = _ref2.data;\n    return info.Data.map(function (_ref3) {\n      var CoinInfo = _ref3.CoinInfo,\n          LASTUPDATE = _ref3.RAW.USD.LASTUPDATE,\n          PRICE = _ref3.DISPLAY.USD.PRICE;\n      return {\n        id: CoinInfo.Id,\n        name: CoinInfo.Name,\n        displayName: CoinInfo.FullName,\n        imageUrl: \"\".concat(CRYPTOCOMPARE_WEBSITE, \"/\").concat(CoinInfo.ImageUrl),\n        price: PRICE,\n        lastUpdate: new Date(LASTUPDATE)\n      };\n    });\n  });\n};\n/**\n * \n * @param {string} symbol - Symbol of the crypto currency to be searched for, such as \"BTC\" for BitCoin, \"ETC\"for Ethereum...\n * @param {number} limit - Length of the array to be searched for.\n * \n * @returns {Array<string>} a array with the names of the top exchanges\n */\n\nexport var getTopExchanges = function getTopExchanges() {\n  var symbol = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"BTC\";\n  var limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return axios.get(\"\".concat(MIN_API_URL).concat(TOP_EXCHANGES, \"?fsym=\").concat(symbol, \"&tsym=USD&limit=\").concat(limit)).then(function (_ref4) {\n    var Exchanges = _ref4.data.Data.Exchanges;\n    return Exchanges;\n  });\n};\n/**\n * \n */\n\nexport var getCryptoInfoAndExchanges = function getCryptoInfoAndExchanges(crypto, symbol) {\n  var limit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n  return axios.get(\"\".concat(MIN_API_URL).concat(TOP_EXCHANGES, \"/full?fsym=\").concat(crypto, \"&tsym=\").concat(symbol, \"&limit=\").concat(limit)).then(function (_ref5) {\n    var Data = _ref5.data.Data;\n    return Data;\n  }).then(function (_ref6) {\n    var Exchanges = _ref6.Exchanges,\n        CoinInfo = _ref6.CoinInfo;\n    return {\n      exchanges: Exchanges.map(function (market) {\n        return {\n          name: market.MARKET,\n          price: getSymbol(market.TOSYMBOL) + \" \" + market.PRICE,\n          lastUpdate: new Date(market.LASTUPDATE),\n          highLast24Hours: market.HIGH24HOUR\n        };\n      }),\n      coinInfo: {\n        name: CoinInfo.Name,\n        displayName: CoinInfo.FullName,\n        imageUrl: \"\".concat(CRYPTOCOMPARE_WEBSITE).concat(CoinInfo.ImageUrl),\n        overviewUrl: \"\".concat(CRYPTOCOMPARE_WEBSITE).concat(CoinInfo.Url),\n        totalCoinsMined: CoinInfo.TotalCoinsMined\n      }\n    };\n  });\n};\n/**\n * @returns {Array<wallets>}\n */\n\nexport var getAllWallets = function getAllWallets() {\n  return axios.get(\"\".concat(MIN_API_URL).concat(GENERAL_WALLETS)).then(function (_ref7) {\n    var Data = _ref7.data.Data;\n    return Data;\n  }).then(function (wallets) {\n    return wallets.map(function (wallet) {\n      return {\n        id: wallet.Id,\n        name: wallet.Name,\n        anonymity: wallet.Anonymity,\n        secuiry: wallet.Security,\n        logoUrl: \"\".concat(CRYPTOCOMPARE_WEBSITE).concat(wallet.LogoUrl),\n        coins: wallet.Coins,\n        platforms: wallet.Platforms,\n        sourceCodeUrl: wallet.SourceCodeUrl,\n        url: wallet.AffiliateURL\n      };\n    });\n  });\n};\nexport var getPricesForCharts = function getPricesForCharts() {};","map":{"version":3,"sources":["/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/src/services/crypto/crypto-service.js"],"names":["axios","MIN_API_URL","TOP_LIST_24H","TOP_EXCHANGES","GENERAL_WALLETS","CRYPTOCOMPARE_WEBSITE","getSymbol","getTopListBy24Hours","limit","symbol","page","get","then","info","data","Data","map","CoinInfo","LASTUPDATE","RAW","USD","PRICE","DISPLAY","id","Id","name","Name","displayName","FullName","imageUrl","ImageUrl","price","lastUpdate","Date","getTopExchanges","Exchanges","getCryptoInfoAndExchanges","crypto","exchanges","market","MARKET","TOSYMBOL","highLast24Hours","HIGH24HOUR","coinInfo","overviewUrl","Url","totalCoinsMined","TotalCoinsMined","getAllWallets","wallets","wallet","anonymity","Anonymity","secuiry","Security","logoUrl","LogoUrl","coins","Coins","platforms","Platforms","sourceCodeUrl","SourceCodeUrl","url","AffiliateURL","getPricesForCharts"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n  MIN_API_URL,\n  TOP_LIST_24H,\n  TOP_EXCHANGES,\n  GENERAL_WALLETS,\n  CRYPTOCOMPARE_WEBSITE\n} from '../constants';\nimport { getSymbol } from '../../shared/utils/Symbol';\n\n\n/**\n * @returns {Array<{id: string, name: string, displayName: string, imageUrl: string, price: number, lastUpdate: Date }>}\n */\nexport const getTopListBy24Hours = ({limit = 10, symbol = 'USD', page = 0}) => {\n  return axios.get(`${MIN_API_URL}/${TOP_LIST_24H}?limit=${limit}&tsym=${symbol}&page=${page}`).then(({\n    data: info\n  }) => {\n    return info.Data.map(({\n      CoinInfo,\n      RAW: { USD: { LASTUPDATE } },\n      DISPLAY: { USD: { PRICE } }\n    }) => ({\n      id: CoinInfo.Id,\n      name: CoinInfo.Name,\n      displayName: CoinInfo.FullName,\n      imageUrl: `${CRYPTOCOMPARE_WEBSITE}/${CoinInfo.ImageUrl}`,\n      price: PRICE,\n      lastUpdate: new Date(LASTUPDATE)\n    }))\n  });\n}\n\n/**\n * \n * @param {string} symbol - Symbol of the crypto currency to be searched for, such as \"BTC\" for BitCoin, \"ETC\"for Ethereum...\n * @param {number} limit - Length of the array to be searched for.\n * \n * @returns {Array<string>} a array with the names of the top exchanges\n */\nexport const getTopExchanges = (symbol = \"BTC\", limit = 10) => {\n  return axios.get(`${MIN_API_URL}${TOP_EXCHANGES}?fsym=${symbol}&tsym=USD&limit=${limit}`)\n    .then(({data: { Data: { Exchanges }}}) => Exchanges);\n}\n\n\n/**\n * \n */\nexport const getCryptoInfoAndExchanges = (crypto, symbol, limit = 10) => {\n  return axios.get(`${MIN_API_URL}${TOP_EXCHANGES}/full?fsym=${crypto}&tsym=${symbol}&limit=${limit}`)\n    .then(({data: { Data }}) => Data)\n    .then(({Exchanges, CoinInfo}) => {\n      return {\n        exchanges: Exchanges.map(market => ({\n          name: market.MARKET,\n          price: getSymbol(market.TOSYMBOL) + ` ` + market.PRICE,\n          lastUpdate: new Date(market.LASTUPDATE),\n          highLast24Hours: market.HIGH24HOUR\n        })),\n        coinInfo: {\n          name: CoinInfo.Name,\n          displayName: CoinInfo.FullName,\n          imageUrl: `${CRYPTOCOMPARE_WEBSITE}${CoinInfo.ImageUrl}`,\n          overviewUrl: `${CRYPTOCOMPARE_WEBSITE}${CoinInfo.Url}`,\n          totalCoinsMined: CoinInfo.TotalCoinsMined\n        }\n      }\n    });\n}\n\n\n/**\n * @returns {Array<wallets>}\n */\nexport const getAllWallets = () => {\n  return axios.get(`${MIN_API_URL}${GENERAL_WALLETS}`)\n    .then(({data: { Data }}) => Data)\n    .then(wallets => wallets.map(wallet => {\n      return {\n        id: wallet.Id,\n        name: wallet.Name,\n        anonymity: wallet.Anonymity,\n        secuiry: wallet.Security,\n        logoUrl: `${CRYPTOCOMPARE_WEBSITE}${wallet.LogoUrl}`,\n        coins: wallet.Coins,\n        platforms: wallet.Platforms,\n        sourceCodeUrl: wallet.SourceCodeUrl,\n        url: wallet.AffiliateURL\n      }\n    }))\n}\n\n\nexport const getPricesForCharts = () => {\n  \n}"]},"metadata":{},"sourceType":"module"}