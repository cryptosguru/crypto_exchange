{"ast":null,"code":"import _regeneratorRuntime from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/src/screens/prices/Prices.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px !important;\\n  cursor: pointer;\\n  & > div > .ant-list-item-meta-avatar{\\n    justify-content: center;\\n  }\\n  &:hover {\\n    background-color: #f1f3f5;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  user-select: none;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 70%;\\n  margin: 0 auto;\\n  border: 1px solid #ebedf0;\\n  border-radius: 4px;\\n  padding: 10px 15px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport { getTopListBy24Hours, getCryptoInfoAndExchanges } from '../../services/crypto/crypto-service';\nimport { List, Avatar } from 'antd';\nimport styled from 'styled-components';\nimport { CryptoCurrencyDrawer } from \"./components/drawer/CryptocurrencyDrawer\";\nimport { LoadMore } from '../../shared/components/loadMore/LoadMore';\nimport RouteWrapper from '../../shared/components/routeWrapper/RouteWrapper';\nvar ListWrapper = styled.div(_templateObject());\nvar Price = styled.div(_templateObject2());\nvar StyledListItem = styled(List.Item)(_templateObject3());\nexport var Prices =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Prices, _Component);\n\n  function Prices() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Prices);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Prices)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cryptos: [],\n      loading: false,\n      searchInfo: {\n        limit: 10,\n        symbol: 'USD',\n        page: 0\n      },\n      activeCoin: {},\n      drawerVisible: false,\n      exchangesLimit: 10,\n      exchangesLoading: false,\n      exchanges: []\n    };\n    return _this;\n  }\n\n  _createClass(Prices, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.search();\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      var _this2 = this;\n\n      this.setState({\n        loading: true\n      });\n      getTopListBy24Hours(this.state.searchInfo).then(function (cryptos) {\n        _this2.setState({\n          cryptos: _this2.state.cryptos.concat(cryptos),\n          loading: false\n        });\n      });\n    }\n  }, {\n    key: \"onLoadMore\",\n    value: function onLoadMore() {\n      this.setState({\n        searchInfo: _objectSpread({}, this.state.searchInfo, {\n          page: this.state.searchInfo.page + 1\n        })\n      }, this.search);\n    }\n  }, {\n    key: \"itemClicked\",\n    value: function itemClicked(item) {\n      var _this3 = this;\n\n      this.setState({\n        drawerVisible: true,\n        activeCoin: item,\n        onClose: function onClose() {\n          return _this3.closeDrawer();\n        },\n        exchangesLoading: true\n      }, this.loadExchanges);\n    }\n  }, {\n    key: \"loadExchanges\",\n    value: function () {\n      var _loadExchanges = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _ref, coinInfo, exchanges;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return getCryptoInfoAndExchanges(this.state.activeCoin.name, 'USD', this.state.exchangesLimit);\n\n              case 2:\n                _ref = _context.sent;\n                coinInfo = _ref.coinInfo;\n                exchanges = _ref.exchanges;\n                this.setState({\n                  exchangesLoading: false,\n                  selectedCoinInfo: coinInfo,\n                  exchanges: exchanges,\n                  hasMoreExchanges: this.state.exchangesLimit === exchanges.length\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadExchanges() {\n        return _loadExchanges.apply(this, arguments);\n      }\n\n      return loadExchanges;\n    }()\n  }, {\n    key: \"closeDrawer\",\n    value: function closeDrawer() {\n      this.setState({\n        drawerVisible: false,\n        exchangesLimit: 10,\n        activeCoin: {},\n        selectedCoinInfo: {},\n        exchanges: []\n      });\n    }\n  }, {\n    key: \"renderItem\",\n    value: function renderItem(item) {\n      var _this4 = this;\n\n      return React.createElement(StyledListItem, {\n        key: item.id,\n        item: item,\n        onClick: function onClick() {\n          return _this4.itemClicked(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(List.Item.Meta, {\n        avatar: React.createElement(Avatar, {\n          src: item.imageUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }),\n        title: React.createElement(\"a\", {\n          href: item.href,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, item.displayName),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(Price, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, item.price));\n    }\n  }, {\n    key: \"loadMore\",\n    value: function loadMore() {\n      return !this.state.loading && React.createElement(LoadMore, {\n        onClick: this.onLoadMore.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"onLoadMoreExchanges\",\n    value: function onLoadMoreExchanges() {\n      this.setState({\n        exchangesLimit: this.state.exchangesLimit + 10,\n        exchangesLoading: true\n      }, this.loadExchanges);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(RouteWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(CryptoCurrencyDrawer, {\n        visible: this.state.drawerVisible,\n        cryptocurrencyInfo: this.state.selectedCoinInfo,\n        onClose: function onClose() {\n          return _this5.closeDrawer();\n        },\n        exchangesLoading: this.state.exchangesLoading,\n        exchanges: this.state.exchanges,\n        onLoadMoreExchanges: function onLoadMoreExchanges() {\n          return _this5.onLoadMoreExchanges();\n        },\n        hasMoreExchanges: this.state.hasMoreExchanges,\n        onOpenExchange: console.log,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(ListWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(List, {\n        loadMore: this.loadMore(),\n        loading: this.state.loading,\n        size: \"small\",\n        itemLayout: \"horizontal\",\n        dataSource: this.state.cryptos,\n        renderItem: this.renderItem.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Prices;\n}(Component);","map":{"version":3,"sources":["/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/src/screens/prices/Prices.js"],"names":["React","Component","getTopListBy24Hours","getCryptoInfoAndExchanges","List","Avatar","styled","CryptoCurrencyDrawer","LoadMore","RouteWrapper","ListWrapper","div","Price","StyledListItem","Item","Prices","state","cryptos","loading","searchInfo","limit","symbol","page","activeCoin","drawerVisible","exchangesLimit","exchangesLoading","exchanges","search","setState","then","concat","item","onClose","closeDrawer","loadExchanges","name","coinInfo","selectedCoinInfo","hasMoreExchanges","length","id","itemClicked","imageUrl","href","displayName","price","onLoadMore","bind","onLoadMoreExchanges","console","log","loadMore","renderItem"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getTopListBy24Hours, getCryptoInfoAndExchanges } from '../../services/crypto/crypto-service';\nimport { List, Avatar } from 'antd';\nimport styled from 'styled-components';\nimport { CryptoCurrencyDrawer } from \"./components/drawer/CryptocurrencyDrawer\";\nimport { LoadMore } from '../../shared/components/loadMore/LoadMore';\nimport RouteWrapper from '../../shared/components/routeWrapper/RouteWrapper';\n\nconst ListWrapper = styled.div`\n  width: 70%;\n  margin: 0 auto;\n  border: 1px solid #ebedf0;\n  border-radius: 4px;\n  padding: 10px 15px;\n`\n\nconst Price = styled.div`\n  user-select: none;\n`\nconst StyledListItem = styled(List.Item)`\n  padding: 10px !important;\n  cursor: pointer;\n  & > div > .ant-list-item-meta-avatar{\n    justify-content: center;\n  }\n  &:hover {\n    background-color: #f1f3f5;\n  }\n`;\n\nexport class Prices extends Component {\n  state = { \n    cryptos: [], \n    loading: false, \n    searchInfo: {\n      limit: 10,\n      symbol: 'USD',\n      page: 0 \n    },\n    activeCoin: {},\n    drawerVisible: false,\n    exchangesLimit: 10,\n    exchangesLoading: false,\n    exchanges: []\n  };\n\n  componentWillMount() {\n    this.search();\n  }\n\n  search() {\n    this.setState({ loading: true });\n    getTopListBy24Hours(this.state.searchInfo).then(cryptos => {\n      this.setState({ cryptos: this.state.cryptos.concat(cryptos), loading: false});\n    })\n  }\n\n  onLoadMore() {\n    this.setState({ \n      searchInfo: { ...this.state.searchInfo, page: this.state.searchInfo.page + 1 }\n    }, this.search);\n  }\n  \n  itemClicked(item) {\n    this.setState({\n      drawerVisible: true, activeCoin: item,\n      onClose: () => this.closeDrawer(), exchangesLoading: true,\n    }, this.loadExchanges );\n  }\n  \n  async loadExchanges() {\n    const { coinInfo, exchanges } = await getCryptoInfoAndExchanges(this.state.activeCoin.name, 'USD', this.state.exchangesLimit);\n    this.setState({      \n      exchangesLoading: false,\n      selectedCoinInfo: coinInfo,\n      exchanges: exchanges,\n      hasMoreExchanges: this.state.exchangesLimit === exchanges.length\n    })\n  }\n  \n  closeDrawer() {\n    this.setState({\n      drawerVisible: false, exchangesLimit: 10, \n      activeCoin: {}, selectedCoinInfo: {}, \n      exchanges: [] \n    });\n  }\n\n  renderItem(item) {\n    return (\n      <StyledListItem key={item.id} item={item} onClick={() => this.itemClicked(item)}>\n       <List.Item.Meta\n          avatar={<Avatar src={item.imageUrl} />}\n          title={<a href={item.href}>{item.displayName}</a>}\n          />\n        <Price>\n          {item.price}\n        </Price>\n      </StyledListItem>\n    )\n  }\n\n  loadMore() {\n    return !this.state.loading && ( <LoadMore onClick={this.onLoadMore.bind(this)} /> );\n  }\n\n  onLoadMoreExchanges() {\n    this.setState({ exchangesLimit: this.state.exchangesLimit + 10, exchangesLoading: true }, this.loadExchanges);\n  }\n  \n  render() {\n    return (\n      <RouteWrapper>\n        <CryptoCurrencyDrawer \n          visible={this.state.drawerVisible} \n          cryptocurrencyInfo={this.state.selectedCoinInfo} \n          onClose={() => this.closeDrawer()}\n          exchangesLoading={this.state.exchangesLoading}\n          exchanges={this.state.exchanges}\n          onLoadMoreExchanges={() => this.onLoadMoreExchanges()}\n          hasMoreExchanges={this.state.hasMoreExchanges}\n          onOpenExchange={console.log}/>\n        <ListWrapper>\n          <List\n            loadMore={this.loadMore()}\n            loading={this.state.loading}\n            size=\"small\"\n            itemLayout=\"horizontal\"\n            dataSource={this.state.cryptos}\n            renderItem={this.renderItem.bind(this)}\n          />\n        </ListWrapper>\n      </RouteWrapper>\n    )\n  }\n\n}"]},"metadata":{},"sourceType":"module"}