{"ast":null,"code":"import _regeneratorRuntime from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/src/App.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  * {\\n    margin: 0px;\\n    padding: 0px;\\n  }\\n  body, html {\\n    font-family: 'Roboto', sans-serif;\\n    width: 100%;\\n    height: 100%;\\n  }\\n  .App, #root {\\n    height: 100%;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Header } from './components/header/Header';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { LandingPage } from './screens/landing-page/LandingPage';\nimport { Prices } from './screens/prices/Prices';\nimport 'antd/dist/antd.css';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { About } from './screens/about/About';\nimport { Wallets } from './screens/wallets/Wallets';\nvar Global = createGlobalStyle(_templateObject());\nvar StyledRouteContent = styled.div(_templateObject2());\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      activeRoute: \"/\"\n    };\n    _this.callBackendAPI =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/express_backend');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // Call our fetch function below once the component mounts\n      this.callBackendAPI().then(function (res) {\n        return _this2.setState({\n          data: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Global, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(BrowserRouter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(StyledRouteContent, {\n        activeRoute: this.state.activeRoute,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/\",\n        exact: true,\n        component: LandingPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/prices\",\n        exact: true,\n        component: Prices,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/about\",\n        exact: true,\n        component: About,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/wallets\",\n        exact: true,\n        component: Wallets,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/luan/Documents/gitProjects/cryptocurrency/cryptocurrency/client/src/App.js"],"names":["React","Component","Header","BrowserRouter","Route","LandingPage","Prices","styled","createGlobalStyle","About","Wallets","Global","StyledRouteContent","div","App","state","activeRoute","callBackendAPI","fetch","response","json","body","status","Error","message","then","res","setState","data","express","catch","err","console","log"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAsC,kBAAtC;AACA,SAASC,WAAT,QAA4B,oCAA5B;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,OAAO,oBAAP;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,SAASC,KAAT,QAAsB,uBAAtB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AAEA,IAAMC,MAAM,GAAGH,iBAAH,mBAAZ;AAeA,IAAMI,kBAAkB,GAAGL,MAAM,CAACM,GAAV,oBAAxB;;IAIMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,WAAW;AADL,K;UAYRC,c;;;;6BAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,CAAC,kBAAD,CADb;;AAAA;AACTC,cAAAA,QADS;AAAA;AAAA,qBAEIA,QAAQ,CAACC,IAAT,EAFJ;;AAAA;AAETC,cAAAA,IAFS;;AAAA,oBAIXF,QAAQ,CAACG,MAAT,KAAoB,GAJT;AAAA;AAAA;AAAA;;AAAA,oBAKPC,KAAK,CAACF,IAAI,CAACG,OAAN,CALE;;AAAA;AAAA,+CAORH,IAPQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;wCAPG;AAAA;;AAChB;AACF,WAAKJ,cAAL,GACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAI,MAAI,CAACC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,SAAd,CAAJ;AAAA,OADX,EAEGC,KAFH,CAES,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAFZ;AAGD,K,CACC;;;;6BAWO;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,kBAAD;AAAoB,QAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,SAAS,EAAGX,WAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,MAA3B;AAA4B,QAAA,SAAS,EAAGC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,SAAS,EAAGG,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,KAAK,MAA5B;AAA6B,QAAA,SAAS,EAAGC,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CAFF,CADF;AAcD;;;;EAtCeT,S;;AAyClB,eAAea,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Header } from './components/header/Header';\nimport { BrowserRouter, Route  } from \"react-router-dom\";\nimport { LandingPage } from './screens/landing-page/LandingPage';\nimport { Prices } from './screens/prices/Prices';\nimport 'antd/dist/antd.css';\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { About } from './screens/about/About';\nimport { Wallets } from './screens/wallets/Wallets';\n\nconst Global = createGlobalStyle`\n  * {\n    margin: 0px;\n    padding: 0px;\n  }\n  body, html {\n    font-family: 'Roboto', sans-serif;\n    width: 100%;\n    height: 100%;\n  }\n  .App, #root {\n    height: 100%;\n  }\n`\n\nconst StyledRouteContent = styled.div`\n  height: 100%;\n`\n\nclass App extends Component {\n  state = {\n    activeRoute: `/`\n  }\n\n\n  componentDidMount() {\n      // Call our fetch function below once the component mounts\n    this.callBackendAPI()\n      .then(res => this.setState({ data: res.express }))\n      .catch(err => console.log(err));\n  }\n    // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n  callBackendAPI = async () => {\n    const response = await fetch('/express_backend');\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message) \n    }\n    return body;\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Global/>\n        <BrowserRouter>\n          <StyledRouteContent activeRoute={this.state.activeRoute}>\n            <Header/>\n            <Route path=\"/\" exact component={ LandingPage }/>\n            <Route path=\"/prices\" exact component={ Prices }/>\n            <Route path=\"/about\" exact component={ About }/>\n            <Route path=\"/wallets\" exact component={ Wallets }/>\n          </StyledRouteContent>\n        </BrowserRouter>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}