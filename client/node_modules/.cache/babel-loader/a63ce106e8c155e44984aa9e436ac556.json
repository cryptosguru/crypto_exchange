{"ast":null,"code":"import React from 'react';\nimport createReactClass from 'create-react-class';\nimport PropTypes from 'prop-types';\nimport KeyCode from 'rc-util/es/KeyCode';\nimport CalendarHeader from './calendar/CalendarHeader';\nimport CalendarFooter from './calendar/CalendarFooter';\nimport CalendarMixin from './mixin/CalendarMixin';\nimport CommonMixin from './mixin/CommonMixin';\nvar MonthCalendar = createReactClass({\n  displayName: 'MonthCalendar',\n  propTypes: {\n    monthCellRender: PropTypes.func,\n    dateCellRender: PropTypes.func\n  },\n  mixins: [CommonMixin, CalendarMixin],\n  getInitialState: function getInitialState() {\n    return {\n      mode: 'month'\n    };\n  },\n  onKeyDown: function onKeyDown(event) {\n    var keyCode = event.keyCode;\n    var ctrlKey = event.ctrlKey || event.metaKey;\n    var stateValue = this.state.value;\n    var disabledDate = this.props.disabledDate;\n    var value = stateValue;\n\n    switch (keyCode) {\n      case KeyCode.DOWN:\n        value = stateValue.clone();\n        value.add(3, 'months');\n        break;\n\n      case KeyCode.UP:\n        value = stateValue.clone();\n        value.add(-3, 'months');\n        break;\n\n      case KeyCode.LEFT:\n        value = stateValue.clone();\n\n        if (ctrlKey) {\n          value.add(-1, 'years');\n        } else {\n          value.add(-1, 'months');\n        }\n\n        break;\n\n      case KeyCode.RIGHT:\n        value = stateValue.clone();\n\n        if (ctrlKey) {\n          value.add(1, 'years');\n        } else {\n          value.add(1, 'months');\n        }\n\n        break;\n\n      case KeyCode.ENTER:\n        if (!disabledDate || !disabledDate(stateValue)) {\n          this.onSelect(stateValue);\n        }\n\n        event.preventDefault();\n        return 1;\n\n      default:\n        return undefined;\n    }\n\n    if (value !== stateValue) {\n      this.setValue(value);\n      event.preventDefault();\n      return 1;\n    }\n  },\n  handlePanelChange: function handlePanelChange(_, mode) {\n    if (mode !== 'date') {\n      this.setState({\n        mode: mode\n      });\n    }\n  },\n  render: function render() {\n    var props = this.props,\n        state = this.state;\n    var mode = state.mode,\n        value = state.value;\n    var children = React.createElement('div', {\n      className: props.prefixCls + '-month-calendar-content'\n    }, React.createElement('div', {\n      className: props.prefixCls + '-month-header-wrap'\n    }, React.createElement(CalendarHeader, {\n      prefixCls: props.prefixCls,\n      mode: mode,\n      value: value,\n      locale: props.locale,\n      disabledMonth: props.disabledDate,\n      monthCellRender: props.monthCellRender,\n      monthCellContentRender: props.monthCellContentRender,\n      onMonthSelect: this.onSelect,\n      onValueChange: this.setValue,\n      onPanelChange: this.handlePanelChange\n    })), React.createElement(CalendarFooter, {\n      prefixCls: props.prefixCls,\n      renderFooter: props.renderFooter\n    }));\n    return this.renderRoot({\n      className: props.prefixCls + '-month-calendar',\n      children: children\n    });\n  }\n});\nexport default MonthCalendar;","map":null,"metadata":{},"sourceType":"module"}